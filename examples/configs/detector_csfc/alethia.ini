[spa]
algorithm_type = detector
detector_type = binary
compatible_types = ['png', 'pgm']
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia/
run = ./aletheia.py spa INPUT_IMAGE_PATH
pipe_output = True
regex_filter_yes = Hiden data found
regex_filter_no = No hidden data found

[rs]
algorithm_type = detector
detector_type = binary
compatible_types = ['png', 'pgm']
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py rs INPUT_IMAGE_PATH
pipe_output = True
regex_filter_yes = Hiden data found
regex_filter_no = No hidden data found

[calibration]
algorithm_type = detector
detector_type = binary
compatible_types = ['png']
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia/
run = ./aletheia.py calibration INPUT_IMAGE_PATH
pipe_output = True
regex_filter_yes = Hiden data found
regex_filter_no = No hidden data found

[esvm]
algorithm_type = detector
detector_type = binary
compatible_types = ['png', 'jpeg', 'jpg']
command_type = native
run = ./aletheia.py esvm <model_path> <feature_extractor> INPUT_IMAGE_DIRECTORY
pipe_output = True
regex_filter_yes = probability > THRESHOLD
regex_filter_no = probability < THRESHOLD