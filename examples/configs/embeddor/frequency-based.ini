[f5]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = f5 -t e -i INPUT_IMAGE_PATH -o OUTPUT_IMAGE_PATH -d SECRET_TXT_PLAINTEXT
verify = f5 -t x -i INPUT_IMAGE_PATH

[JSteg]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = jsteg hide INPUT_IMAGE_PATH SECRET_TXT_FILE OUTPUT_IMAGE_PATH
verify = jsteg reveal INPUT_IMAGE_PATH VERIFY_TXT_FILE

[Outguess]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.17
command_type = docker
docker_image = local/stego
run = outguess -k PASSWORD -d SECRET_TXT_FILE INPUT_IMAGE_PATH OUTPUT_IMAGE_PATH
verify = outguess -r -k PASSWORD INPUT_IMAGE_PATH VERIFY_TXT_FILE

[StegHide]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg', 'bmp']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = steghide embed -f -ef SECRET_TXT_FILE -cf INPUT_IMAGE_PATH -p PASSWORD -sf OUTPUT_IMAGE_PATH
verify = steghide extract -sf INPUT_IMAGE_PATH -p PASSWORD -xf VERIFY_TXT_FILE

[JUNIWARD-COLOR]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py j-uniward-color-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[JUNIWARD]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py j-uniward-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[EBS-COLOR]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py ebs-color-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[EBS]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py ebs-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[UED-COLOR]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py ued-color-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[UED]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py ued-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[nsF5-COLOR]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py nsf5-color-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[nsF5]
algorithm_type = embeddor
compatible_types = ['jpeg', 'jpg']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py nsf5-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME