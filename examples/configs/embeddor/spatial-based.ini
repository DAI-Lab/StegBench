[LSBSteg]
algorithm_type = embeddor
compatible_types = ['png', 'bmp']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = LSBSteg encode -i INPUT_IMAGE_PATH -o OUTPUT_IMAGE_PATH -f SECRET_TXT_FILE
verify = LSBSteg decode -i INPUT_IMAGE_PATH -o VERIFY_TXT_FILE

[cloackedpixel]
algorithm_type = embeddor
compatible_types = ['png', 'pgm']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = cloackedpixel hide INPUT_IMAGE_PATH SECRET_TXT_FILE PASSWORD
post_run = mv INPUT_IMAGE_PATH-stego.png OUTPUT_IMAGE_PATH
verify = cloackedpixel extract INPUT_IMAGE_PATH VERIFY_TXT_FILE PASSWORD

[OpenStego]
algorithm_type = embeddor
compatible_types = ['png']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = openstego embed -mf SECRET_TXT_FILE -cf INPUT_IMAGE_PATH -p PASSWORD -sf OUTPUT_IMAGE_PATH
verify = openstego extract -sf INPUT_IMAGE_PATH -p PASSWORD -xf VERIFY_TXT_FILE

[SteganoLSB]
algorithm_type = embeddor
compatible_types = ['png']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/stego
run = stegano-lsb hide --input INPUT_IMAGE_PATH -f SECRET_TXT_FILE -e UTF-8 --output OUTPUT_IMAGE_PATH
verify = stegano-lsb reveal -i INPUT_IMAGE_PATH -e UTF-8 -o VERIFY_TXT_FILE

[SteganoLSB-Erathosthenes]
algorithm_type = embeddor
compatible_types = ['png']
max_embedding_ratio = 0.065
command_type = docker
docker_image = local/stego
run = stegano-lsb-set hide --input INPUT_IMAGE_PATH -f SECRET_TXT_FILE -e UTF-8 -g eratosthenes --output OUTPUT_IMAGE_PATH
verify = stegano-lsb-set reveal -i INPUT_IMAGE_PATH -e UTF-8 -g eratosthenes -o VERIFY_TXT_FILE

[HUGO]
algorithm_type = embeddor
compatible_types = ['png', 'pgm']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py hugo-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[WOW]
algorithm_type = embeddor
compatible_types = ['png', 'pgm']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py wow-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[HILL]
algorithm_type = embeddor
compatible_types = ['png', 'pgm']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py hill-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME

[S-UNIWARD]
algorithm_type = embeddor
compatible_types = ['png', 'pgm']
max_embedding_ratio = 0.5
command_type = docker
docker_image = local/alethia
working_dir = /opt/alethia
run = ./aletheia.py s-uniward-sim INPUT_IMAGE_DIRECTORY PAYLOAD OUTPUT_IMAGE_DIRECTORY
output_file = INPUT_IMAGE_NAME